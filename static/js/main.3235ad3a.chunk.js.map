{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","queryInput","setQueryInput","handleChange","handleSubmit","searchError","onSubmit","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","API_URL","getMovie","title","a","fetch","response","json","App","useState","setMovie","addedMovie","setAddedMovie","setSearchError","movieFromServer","newMovie","preventDefault","find","movieOnList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3235ad3a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","import React from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  queryInput: string;\n  setQueryInput: React.Dispatch<React.SetStateAction<string>>;\n  handleChange: () => Promise<void>;\n  movie: Movie;\n  handleSubmit: (event: React.FormEvent) => void;\n  searchError: boolean;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  queryInput,\n  setQueryInput,\n  handleChange,\n  movie,\n  handleSubmit,\n  searchError,\n}) => (\n  <>\n    <form\n      className=\"find-movie\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"movie-title\">\n          Movie title\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={searchError ? 'input is-danger' : 'input'}\n              value={queryInput}\n              onChange={event => setQueryInput(event.target.value)}\n            />\n          </div>\n        </label>\n        {searchError && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n        )}\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            className=\"button is-light\"\n            onClick={() => handleChange()}\n          >\n            Find a movie\n          </button>\n        </div>\n\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className=\"button is-primary\"\n          >\n            Add to the list\n          </button>\n        </div>\n      </div>\n    </form>\n\n    <div className=\"container\">\n      <h2 className=\"title\">Preview</h2>\n      {movie.Title ? (\n        <MovieCard movie={movie} />\n      ) : '' }\n    </div>\n  </>\n);\n","const API_URL = 'http://www.omdbapi.com';\n\nexport async function getMovie(title: string): Promise<Movie> {\n  const response = await fetch(`${API_URL}/?apikey=1bff3e24&t=${title}`);\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { getMovie } from './api/api';\n\nexport const App: React.FC = () => {\n  const [movie, setMovie] = useState<Movie>({\n    Poster: '',\n    Title: '',\n    Plot: '',\n    imdbID: '',\n  });\n  const [queryInput, setQueryInput] = useState('');\n  const [addedMovie, setAddedMovie] = useState<Movie[]>([]);\n  const [searchError, setSearchError] = useState(false);\n\n  const handleChange = async () => {\n    const movieFromServer = await getMovie(queryInput);\n\n    setMovie(movieFromServer);\n\n    if (!movieFromServer.Title) {\n      return setSearchError(true);\n    }\n\n    return setSearchError(false);\n  };\n\n  const handleAddMovie = (newMovie: Movie) => {\n    if (!newMovie.Title) {\n      return;\n    }\n\n    setAddedMovie([...addedMovie, newMovie]);\n  };\n\n  const clearInput = () => {\n    setQueryInput('');\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    clearInput();\n    if (addedMovie.find(movieOnList => movieOnList.imdbID === movie.imdbID)) {\n      return;\n    }\n\n    handleAddMovie(movie);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={addedMovie} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          queryInput={queryInput}\n          setQueryInput={setQueryInput}\n          handleChange={handleChange}\n          movie={movie}\n          handleSubmit={handleSubmit}\n          searchError={searchError}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}