{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","getMovie","title","a","fetch","response","json","FindMovie","onMovieAdd","queryInput","setQueryInput","useState","setMovie","searchError","setSearchError","clearInput","handleChange","movieFromServer","onSubmit","event","findMovie","find","movieOnList","preventDefault","htmlFor","type","id","placeholder","cn","value","onChange","target","onClick","App","addedMovies","setAddedMovies","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7760501.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com';\n\nexport async function getMovie(title: string): Promise<Movie> {\n  const response = await fetch(`${API_URL}?apikey=1bff3e24&t=${title}`);\n\n  return response.json();\n}\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\ntype Props = {\n  onMovieAdd: (newMovie: Movie) => void;\n  queryInput: string;\n  setQueryInput: React.Dispatch<React.SetStateAction<string>>;\n  movies: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  onMovieAdd,\n  queryInput,\n  setQueryInput,\n  movies,\n}) => {\n  const [movie, setMovie] = useState<Movie>({\n    Poster: '',\n    Title: '',\n    Plot: '',\n    imdbID: '',\n  });\n  const [searchError, setSearchError] = useState(false);\n\n  const clearInput = () => {\n    setQueryInput('');\n  };\n\n  const handleChange = async () => {\n    const movieFromServer = await getMovie(queryInput);\n\n    clearInput();\n    setMovie(movieFromServer);\n\n    if (!movieFromServer.Title) {\n      return setSearchError(true);\n    }\n\n    return setSearchError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    const findMovie = movies.find(movieOnList => movieOnList.imdbID === movie.imdbID);\n\n    event.preventDefault();\n    clearInput();\n\n    if (findMovie) {\n      return;\n    }\n\n    onMovieAdd(movie);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={cn({ 'input is-danger': searchError }, 'input')}\n                value={queryInput}\n                onChange={event => setQueryInput(event.target.value)}\n              />\n            </div>\n          </label>\n          {searchError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleChange}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie.Title ? (\n          <MovieCard movie={movie} />\n        ) : '' }\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [queryInput, setQueryInput] = useState('');\n  const [addedMovies, setAddedMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    if (!newMovie.Title) {\n      return;\n    }\n\n    setAddedMovies([...addedMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={addedMovies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movies={addedMovies}\n          onMovieAdd={handleAddMovie}\n          queryInput={queryInput}\n          setQueryInput={setQueryInput}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}